# 示例2-12
# 建立一个包含3个列表的列表,被包含的3个列表各自有3个元素
board = [['_'] * 3 for i in range(3)]
print(board)

print("-" * 50)

board[1][2] = "X"
print(board)

print("-" * 50)

# --------------------------------------------------

# 示例2-13
# 外面的列表其实包含3个指向同一个列表的引用,当我们不做修改的时候,看起来都还好
# 一旦我们试图标记第一行第二列的元素,就立马暴露了列表内三个引用指向同一个对象的事实
board1 = [['_'] * 3] * 3
print(board1)

print("-" * 50)

board1[1][2] = "0"
print(board1)

print("-" * 50)

board2 = [['_'] * 3]
print(board2)

# --------------------------------------------------
# 解释:示例2-13 犯的错误本质上和下面的代码犯的错误一样
row = ['_'] * 3
board3 = []
for i in range(3):
    board3.append(row)

board3[1][2] = 'X'
print(board3)

# 解释:相反示例2-12 的方法等同于下面这样做
board4=[]
for i in range(3):
    # 每次迭代都新建了一个列表,作为新的一行row 追加到游戏板board
    row=['_'] * 3
    board4.append(row)

print(board4)
board4[1][2] = 'X'
print(board4)

# --------------------------------------------------